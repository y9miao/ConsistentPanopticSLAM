#include "global_segment_map/meshing/semantic_color_map.h"

namespace voxblox {
SemanticColorMap SemanticColorMap::create(const ClassTask& class_task) {
  switch (class_task) {
    case kCoco80:
      return CocoColorMap();
    case kNyu13:
      return Nyu13ColorMap();
    case Nyu40:
      return Nyu40ColorMap();
    case kCocoPano:
      return CocoPanoColorMap();
  }
  return CocoColorMap(); // default
}

void SemanticColorMap::getColor(const SemanticLabel& semantic_label,
                                Color* color) const {
  CHECK_NOTNULL(color);
  color->r = color_code_.at(semantic_label)[0];
  color->g = color_code_.at(semantic_label)[1];
  color->b = color_code_.at(semantic_label)[2];
}

// NYUv2 13 class task color coding defined in SceneNet.
Nyu13ColorMap::Nyu13ColorMap()
    : SemanticColorMap({{200, 200, 200},    // BG
                        {20, 20, 20},       // Unknown
                        {0, 128, 128},      // Bed
                        {250, 50, 50},      // Books
                        {102, 0, 204},      // Ceiling
                        {50, 50, 250},      // Chair
                        {220, 220, 220},    // Floor
                        {255, 69, 20},      // Furniture
                        {255, 20, 127},     // Objects
                        {50, 50, 150},      // Picture
                        {222, 180, 140},    // Sofa
                        {50, 250, 50},      // Table
                        {255, 215, 0},      // TV
                        {150, 150, 150},    // Wall
                        {0, 255, 255}}) {}  // Window

// NYUv2 40 class task color coding defined in SceneNet.
Nyu40ColorMap::Nyu40ColorMap()
    : SemanticColorMap({ {120, 120, 120 },
    {180, 120, 120 },
    {6, 230, 230 },
    {80, 50, 50 },
    {4, 200, 3 },
    {120, 120, 80 },
    {140, 140, 140 },
    {204, 5, 255 },
    {230, 230, 230 },
    {4, 250, 7 },
    {224, 5, 255 },
    {235, 255, 7 },
    {150, 5, 61 },
    {120, 120, 70 },
    {8, 255, 51 },
    {255, 6, 82 },
    {143, 255, 140 },
    {204, 255, 4 },
    {255, 51, 7 },
    {204, 70, 3 },
    {0, 102, 200 },
    {61, 230, 250 },
    {255, 6, 51 },
    {11, 102, 255 },
    {255, 7, 71 },
    {255, 9, 224 },
    {9, 7, 230 },
    {220, 220, 220 },
    {255, 9, 92 },
    {112, 9, 255 },
    {8, 255, 214 },
    {7, 255, 224 },
    {255, 184, 6 },
    {10, 255, 71 },
    {255, 41, 10 },
    {7, 255, 255 },
    {224, 255, 8 },
    {102, 8, 255 },
    {255, 61, 6 },
    {255, 194, 7 },
    {255, 122, 8} }) {} 

// COCO 80 class task color coding using the PASCAL VOC color map.
CocoColorMap::CocoColorMap()
    : SemanticColorMap(
          {{200, 200, 200}, {128, 0, 0},    {0, 128, 0},    {128, 128, 0},
           {0, 0, 128},     {128, 0, 128},  {0, 128, 128},  {128, 128, 128},
           {64, 0, 0},      {192, 0, 0},    {64, 128, 0},   {192, 128, 0},
           {64, 0, 128},    {192, 0, 128},  {64, 128, 128}, {192, 128, 128},
           {0, 64, 0},      {128, 64, 0},   {0, 192, 0},    {128, 192, 0},
           {0, 64, 128},    {128, 64, 128}, {0, 192, 128},  {128, 192, 128},
           {64, 64, 0},     {192, 64, 0},   {64, 192, 0},   {192, 192, 0},
           {64, 64, 128},   {192, 64, 128}, {64, 192, 128}, {192, 192, 128},
           {0, 0, 64},      {128, 0, 64},   {0, 128, 64},   {128, 128, 64},
           {0, 0, 192},     {128, 0, 192},  {0, 128, 192},  {128, 128, 192},
           {64, 0, 64},     {192, 0, 64},   {64, 128, 64},  {192, 128, 64},
           {64, 0, 192},    {192, 0, 192},  {64, 128, 192}, {192, 128, 192},
           {0, 64, 64},     {128, 64, 64},  {0, 192, 64},   {128, 192, 64},
           {0, 64, 192},    {128, 64, 192}, {0, 192, 192},  {128, 192, 192},
           {64, 64, 64},    {192, 64, 64},  {64, 192, 64},  {192, 192, 64},
           {64, 64, 192},   {192, 64, 192}, {64, 192, 192}, {192, 192, 192},
           {32, 0, 0},      {160, 0, 0},    {32, 128, 0},   {160, 128, 0},
           {32, 0, 128},    {160, 0, 128},  {32, 128, 128}, {160, 128, 128},
           {96, 0, 0},      {224, 0, 0},    {96, 128, 0},   {224, 128, 0},
           {96, 0, 128},    {224, 0, 128},  {96, 128, 128}, {224, 128, 128},
           {32, 64, 0},     {160, 64, 0},   {32, 192, 0},   {160, 192, 0},
           {32, 64, 128},   {160, 64, 128}, {32, 192, 128}, {160, 192, 128},
           {96, 64, 0},     {224, 64, 0},   {96, 192, 0},   {224, 192, 0},
           {96, 64, 128},   {224, 64, 128}, {96, 192, 128}, {224, 192, 128},
           {32, 0, 64},     {160, 0, 64},   {32, 128, 64},  {160, 128, 64},
           {32, 0, 192},    {160, 0, 192},  {32, 128, 192}, {160, 128, 192},
           {96, 0, 64},     {224, 0, 64},   {96, 128, 64},  {224, 128, 64},
           {96, 0, 192},    {224, 0, 192},  {96, 128, 192}, {224, 128, 192},
           {32, 64, 64},    {160, 64, 64},  {32, 192, 64},  {160, 192, 64},
           {32, 64, 192},   {160, 64, 192}, {32, 192, 192}, {160, 192, 192},
           {96, 64, 64},    {224, 64, 64},  {96, 192, 64},  {224, 192, 64},
           {96, 64, 192},   {224, 64, 192}, {96, 192, 192}, {224, 192, 192},
           {0, 32, 0},      {128, 32, 0},   {0, 160, 0},    {128, 160, 0},
           {0, 32, 128},    {128, 32, 128}, {0, 160, 128},  {128, 160, 128},
           {64, 32, 0},     {192, 32, 0},   {64, 160, 0},   {192, 160, 0},
           {64, 32, 128},   {192, 32, 128}, {64, 160, 128}, {192, 160, 128},
           {0, 96, 0},      {128, 96, 0},   {0, 224, 0},    {128, 224, 0},
           {0, 96, 128},    {128, 96, 128}, {0, 224, 128},  {128, 224, 128},
           {64, 96, 0},     {192, 96, 0},   {64, 224, 0},   {192, 224, 0},
           {64, 96, 128},   {192, 96, 128}, {64, 224, 128}, {192, 224, 128},
           {0, 32, 64},     {128, 32, 64},  {0, 160, 64},   {128, 160, 64},
           {0, 32, 192},    {128, 32, 192}, {0, 160, 192},  {128, 160, 192},
           {64, 32, 64},    {192, 32, 64},  {64, 160, 64},  {192, 160, 64},
           {64, 32, 192},   {192, 32, 192}, {64, 160, 192}, {192, 160, 192},
           {0, 96, 64},     {128, 96, 64},  {0, 224, 64},   {128, 224, 64},
           {0, 96, 192},    {128, 96, 192}, {0, 224, 192},  {128, 224, 192},
           {64, 96, 64},    {192, 96, 64},  {64, 224, 64},  {192, 224, 64},
           {64, 96, 192},   {192, 96, 192}, {64, 224, 192}, {192, 224, 192},
           {32, 32, 0},     {160, 32, 0},   {32, 160, 0},   {160, 160, 0},
           {32, 32, 128},   {160, 32, 128}, {32, 160, 128}, {160, 160, 128},
           {96, 32, 0},     {224, 32, 0},   {96, 160, 0},   {224, 160, 0},
           {96, 32, 128},   {224, 32, 128}, {96, 160, 128}, {224, 160, 128},
           {32, 96, 0},     {160, 96, 0},   {32, 224, 0},   {160, 224, 0},
           {32, 96, 128},   {160, 96, 128}, {32, 224, 128}, {160, 224, 128},
           {96, 96, 0},     {224, 96, 0},   {96, 224, 0},   {224, 224, 0},
           {96, 96, 128},   {224, 96, 128}, {96, 224, 128}, {224, 224, 128},
           {32, 32, 64},    {160, 32, 64},  {32, 160, 64},  {160, 160, 64},
           {32, 32, 192},   {160, 32, 192}, {32, 160, 192}, {160, 160, 192},
           {96, 32, 64},    {224, 32, 64},  {96, 160, 64},  {224, 160, 64},
           {96, 32, 192},   {224, 32, 192}, {96, 160, 192}, {224, 160, 192},
           {32, 96, 64},    {160, 96, 64},  {32, 224, 64},  {160, 224, 64},
           {32, 96, 192},   {160, 96, 192}, {32, 224, 192}, {160, 224, 192},
           {96, 96, 64},    {224, 96, 64},  {96, 224, 64},  {224, 224, 64},
           {96, 96, 192},   {224, 96, 192}, {96, 224, 192}, {224, 224, 192}}) {
  // Defining some custom colors.
  // TODO(margaritaG): swap colors properly, else duplicate colors.
  color_code_[61] = {192, 128, 192};  // Dining table
  color_code_[57] = {192, 64, 64};    // Chair
  color_code_[14] = {64, 128, 128};   // Bench
  color_code_[63] = {0, 64, 192};     // TV
  color_code_[25] = {128, 64, 192};   // Backpack
  color_code_[42] = {64, 128, 64};    // Cup
  color_code_[29] = {128, 192, 192};  // Suitcase
  color_code_[65] = {64, 0, 128};     // Mouse
  color_code_[67] = {160, 128, 0};    // Keyboard
  color_code_[69] = {160, 0, 128};    // Microwave
  color_code_[59] = {64, 64, 128};    // Potted plant
  color_code_[73] = {64, 192, 0};     // Refrigerator
}

// COCO pano class task color.
CocoPanoColorMap::CocoPanoColorMap()
    : SemanticColorMap(
          {{220, 20, 60},   {119, 11, 32},   {0, 0, 142},     {0, 0, 230},     {106, 0, 228}, 
           {0, 60, 100},    {0, 80, 100},    {0, 0, 70},      {0, 0, 192},     {250, 170, 30}, 
           {100, 170, 30},  {220, 220, 0},   {175, 116, 175}, {250, 0, 30},    {165, 42, 42}, 
           {255, 77, 255},  {0, 226, 252},   {182, 182, 255}, {0, 82, 0},      {120, 166, 157}, 
           {110, 76, 0},    {174, 57, 255},  {199, 100, 0},   {72, 0, 118},    {255, 179, 240}, 
           {0, 125, 92},    {209, 0, 151},   {188, 208, 182}, {0, 220, 176},   {255, 99, 164}, 
           {92, 0, 73},     {133, 129, 255}, {78, 180, 255},  {0, 228, 0},     {174, 255, 243}, 
           {45, 89, 255},   {134, 134, 103}, {145, 148, 174}, {255, 208, 186}, {197, 226, 255}, 
           {171, 134, 1},   {109, 63, 54},   {207, 138, 255}, {151, 0, 95},    {9, 80, 61}, 
           {84, 105, 51},   {74, 65, 105},   {166, 196, 102}, {208, 195, 210}, {255, 109, 65}, 
           {0, 143, 149},   {179, 0, 194},   {209, 99, 106},  {5, 121, 0},     {227, 255, 205}, 
           {147, 186, 208}, {153, 69, 1},    {3, 95, 161},    {163, 255, 0},   {119, 0, 170}, 
           {0, 182, 199},   {0, 165, 120},   {183, 130, 88},  {95, 32, 0},     {130, 114, 135}, 
           {110, 129, 133}, {166, 74, 118},  {219, 142, 185}, {79, 210, 114},  {178, 90, 62}, 
           {65, 70, 15},    {127, 167, 115}, {59, 105, 106},  {142, 108, 45},  {196, 172, 0}, 
           {95, 54, 80},    {128, 76, 255},  {201, 57, 1},    {246, 0, 122},   {191, 162, 208}, 
           {200,200,200},
           {255, 255, 128}, {147, 211, 203}, {150, 100, 100}, {168, 171, 172}, {146, 112, 198},
           {210, 170, 100}, {92, 136, 89},   {218, 88, 184},  {241, 129, 0},   {217, 17, 255}, 
           {124, 74, 181},  {70, 70, 70},    {255, 228, 255}, {154, 208, 0},   {193, 0, 92}, 
           {76, 91, 113},   {255, 180, 195}, {106, 154, 176}, {230, 150, 140}, {60, 143, 255}, 
           {128, 64, 128},  {92, 82, 55},    {254, 212, 124}, {73, 77, 174},   {255, 160, 98}, 
           {255, 255, 255}, {104, 84, 109},  {169, 164, 131}, {225, 199, 255}, {137, 54, 74}, 
           {135, 158, 223}, {7, 246, 231},   {107, 255, 200}, {58, 41, 149},   {183, 121, 142}, 
           {255, 73, 97},   {107, 142, 35},  {190, 153, 153}, {146, 139, 141}, {70, 130, 180}, 
           {134, 199, 156}, {209, 226, 140}, {96, 36, 108},   {96, 96, 96},    {64, 170, 64}, 
           {152, 251, 152}, {208, 229, 228}, {206, 186, 171}, {152, 161, 64},  {116, 112, 0}, 
           {0, 114, 143},   {102, 102, 156}, {250, 141, 255}}) {

  color_code_[60] = {192, 128, 192};  //# Dining table
  color_code_[56] = {192, 64, 64};    //# Chair
  color_code_[13] = {64, 128, 128};   //# Bench
  color_code_[62] = {0, 64, 192};     //# television
  color_code_[24] = {128, 64, 192};   //# bag
  color_code_[41] = {64, 128, 64};    //# Cup
  color_code_[72] = {64, 192, 0};     //# fridge
  color_code_[59] = {64, 64, 192};    // # bed
  color_code_[57] = {64, 192, 64};    // # couch-sofa
}

}  // namespace voxblox
